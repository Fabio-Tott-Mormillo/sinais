%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Boas práticasclear all;clc;close all;pkg load control;                                    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - RLC série%%%%    S/L / ( s^2 +s R/L + 1/LC ) %%R = [0:0.1:1];        % resitência - faixaL = 1;C = 1; %%% define a base de tempo de simulaçãotempo = linspace(0,10,1000);for k = 1 : 10    %%% A função de transferência    Ns = [1/L 0];  Ds = [1 R(k)/L 1/(L*C)];  Gs = tf(Ns,Ds);    %%% determinando os pólos do sistema    aux    = roots(Ds);  pr(k,1)  = aux(1);  pr(k,2)  = aux(2);    %%% estimular o sistema    y(:,k) = impulse(Gs,tempo);  end%%% Visualizar figure(1)surf(y)%%% Conclusão: o R controla a atenuação e talvez a oscilação%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  Modificando somente o valor de CR = 0;        % resitência - faixaL = 1;C = [0.1:0.1:1]; %%% define a base de tempo de simulaçãotempo = linspace(0,10,1000);for k = 1 : 9    %%% A função de transferência    Ns = [1/L 0];  Ds = [1 R/L 1/(L*C(k))];  Gs = tf(Ns,Ds);    %%% estimular o sistema    y(:,k) = impulse(Gs,tempo);  aux    = roots(Ds);  pc(k,1)  = aux(1);  pc(k,2)  = aux(2);  end%%% Visualizar figure(2)surf(y)%%% Conclusão: o capacitor controla a frequência