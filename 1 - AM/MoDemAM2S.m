%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  0 - Boas práticasclear all;          % limpa as variáveisclose all;          % fecha todas as figurasclc;                % limpa a telapkg load symbolic;  % carrega o pacote simbólico - Octavepkg load control;   % carrega o pacote de controle - Octave%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  1 - Mensagem e portadorawm = 2*pi;          % frequência da mensagemwc = 20*pi;         % frequência da portadoraTm = (2*pi)/wm;     % período da mensagemTc = (2*pi)/wc;     % período da portadorafm = wm/(2*pi);     % frequência da mensagemfc = wc/(2*pi);     % frequênci da portadorawcorte = 4*pi;      % frequência de corte do filtroMp = 1000;          % Número de pontos por períodoNp = 3;             % Número de períodosN = 15;             % número de harmônicas%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  2 - Sinal moduladotempo = linspace(0,Np*Tm,Np*Mp);    % define o vetor tempomt = 2*cos(wm*tempo);               % define a mensagemportadora = cos(wc*tempo);          % define a portadoraAM = mt.*portadora;                 % define o sinal modulado%%%%%%%%% Visualiza o sinal modulado e a mensagem - m(t)figure(1)plot(tempo, AM,"linewidth", 3); grid;hold;plot(tempo, mt, 'k*');xlabel('tempo em segundos')ylabel('Amplitude em Volts')title('Sinal modulado')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  3 - Sinal demoduladoDEM = AM.*portadora;figure(2)plot(tempo, DEM,'bo'); grid;hold;plot(tempo, mt, 'k*');xlabel('tempo em segundos');ylabel('Amplitude em Volts');title('Sinal demodulado');%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  3.1 - Sinal filtradoFPB = tf(wcorte,[1 wcorte]);yfiltro = lsim(FPB,DEM,tempo);figure(3)plot(tempo, yfiltro,'bo'); grid;hold;plot(tempo, mt, 'k*');xlabel('tempo em segundos');ylabel('Amplitude em Volts');title('Sinal demodulado');yfiltro2 = lsim(FPB,yfiltro,tempo);figure(4)plot(tempo, yfiltro2,'bo'); grid;hold;plot(tempo, mt, 'k*');xlabel('tempo em segundos');ylabel('Amplitude em Volts');title('Sinal demodulado');yfiltro3 = lsim(FPB,yfiltro2,tempo);figure(5)plot(tempo, yfiltro3,'bo'); grid;hold;plot(tempo, mt, 'k*');xlabel('tempo em segundos')ylabel('Amplitude em Volts')title('Sinal demodulado')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                  Domínio da Frequência%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2.1 - Calcular a integral de Fourier do sinal moduladosyms t n Tm wm wcDnmt  = inv(Tm)*int(2*cos(wm*t).*cos(wc*t).*exp(-n*j*wm*t),t,0,Tm);D0mt  = inv(Tm)*int(2*cos(wm*t).*cos(wc*t),t,0,Tm);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2.2 - Calcular os valores numéricos de DnN   = 15;                               % número de harmônicasn   = [-N:1:N];                         % redefine os valores de nwm = 2*pi;          % frequência da mensagemwc = 20*pi;         % frequência da portadoraTm = (2*pi)/wm;     % período da mensagemTc = (2*pi)/wc;     % período da portadoraDnmt  = eval(Dnmt);                     % valores numéricosD0mt  = eval(D0mt);                     % valor médioDnmt(N+1) = D0mt;                       % substitui o valor correto de D0%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2.3 - Sintese do sinal g(t) --> a partir de Dn, somar as projeções %%  2.3.2 - Somatória do sinalsomatoria = 0;                      % incializa a somatóriafor k = 0:2*N                       % 2*N + 1 --> pontos    somatoria = somatoria + Dnmt(k+1)*exp(j*n(k+1)*wm*tempo);  endmensagem   =  somatoria;             % mensagem sintetizada%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2.4 - Visualizar: Dn (análise) e g(t) (síntese) figure(6)                           % domínio da frequênciastem(n*fm,abs(Dnmt));xlabel('Frequência em Hertz')ylabel('Amplitude em Volts')title('Espectro de Amplitudes da mensagem')figure(7)                           % domínio do tempoplot(tempo,mensagem);xlabel('Tempo em segundos')ylabel('Amplitude em Volts')title('Mensagem no tempo')