%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Análise de um MODEM digital%% %%  1 - Acerto da ordem do filtro para eliminar o ripple <--%%  2 - Acertar o sistema, modificando o filtro e a portadora para DC = 10% <--%%  3 - Inserir um segundo transmissor com portadora no dobro da frequência%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%% Pacotes que serão utilizadospkg load signalpkg load control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Mensagem%% %%  mensagem digital - binária, p. exemplo%%% Mensagem regular - onda quadrada##If DUTY is specified, it is the percentage of time the square wave##     is "on".  The square wave is +1 for that portion of the time.####                       on time * 100##        duty cycle = ------------------##                     on time + off timetempo    = linspace(0,5,500);            % vetor tempo para 5 períodosDC       = 10;                           % duty de 50%mensagem = (square(2*pi*tempo,DC)+1)/2;  % criação da mensagem%%% Visualizaçãofigure(1)plot(tempo,mensagem,"linewidth", 3);xlabel('tempo em segundos');ylabel('amplitude em volts');title('Mensagem');grid;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Sinal modulado%% %%  mensagem digital - binária, p. exemplow          = 2*pi*20;               % frequência da portadoraportadora  = cos(w*tempo);          % poratora%%%%% sinal moduladoAMDigital  = mensagem.*portadora;   % sinal moduladoAM %%% Visualizaçãofigure(2)plot(tempo,AMDigital,"linewidth", 3);xlabel('tempo em segundos');ylabel('amplitude em volts');title('Sinal modulado');grid;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 4 - Análise em frequência%% %%  Teorema da amostragem - fs > 2 * fmax ou seja, fmax < fs/2%%% parâmetrosNp    = length(mensagem);       % número de pontosTs    = 1/100;                  % períodofs    = 1/Ts;                   % frequência - Np/max(tempo)%%% mensagem no domínio da frequênciaM_w   = fft(mensagem); %%% sinal modulado no domínio da frequênciaAM_w  = fft(AMDigital);%%% Eixo frequênciafreq  = linspace(-fs/2,fs/2,Np);%%% Visualizaçãofigure(3)subplot(2,1,1)plot(freq,abs(fftshift(M_w)),"linewidth", 3);xlabel('frequência em Hz');ylabel('Módulo');title('Mensagem');grid;subplot(2,1,2)plot(freq,abs(fftshift(AM_w)),"linewidth", 3);xlabel('frequência em Hz');ylabel('Módulo');title('Sinal modulado');grid;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 5 - Demodulação%% %%  sem filtragemdiodo            = AMDigital > 0;       % implementa um diodo idealSinalRetificado  = AMDigital.*diodo;    % sinal retificado%%% implementação do filtroFPB = @(w,wc)     1./((j*w/wc) + 1);w   = 2*pi*freq;                        % frequênciafc  = 10;                                % frequência de corte em Hzwc  = fc*2*pi;                          % frequência de corteSR_w  = fft(SinalRetificado);           % Fourier - frequência% Sinal filtradoSF_w  = fftshift(SR_w).*FPB(w,wc).*FPB(w,wc).*FPB(w,wc).*FPB(w,wc);               SinalFiltrado = ifft(fftshift(SF_w));             % sinal filtrado no tempo%%% Visualizaçãofigure(4)subplot(2,1,1)plot(freq,abs(fftshift(SR_w))/max(abs((SR_w))),"linewidth", 3);xlabel('frequência em Hz');ylabel('Módulo');title('Mensagem');grid; hold;plot(freq, abs(FPB(w,wc)),"linewidth", 3);plot(freq, abs(FPB(w,wc).*FPB(w,wc).*FPB(w,wc).*FPB(w,wc)),"linewidth", 3);subplot(2,1,2)plot(freq,abs((SF_w))/max(abs((SF_w))),"linewidth", 3);xlabel('frequência em Hz');ylabel('Módulo');title('Sinal modulado');grid;%%% Visualizaçãofigure(5)subplot(2,1,1)plot(tempo,SinalRetificado,"linewidth", 3);xlabel('ttempo em segundos');ylabel('Módulo');title('Retificado');grid;subplot(2,1,2)plot(tempo, SinalFiltrado,"linewidth", 3);xlabel('tempo em segundos');ylabel('Módulo');title('Mensagem recuperada');grid; hold;plot(tempo, mensagem,"linewidth", 3);