%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Boas práticasclear all;                        % apaga todas as variáveisclose all;                        % fechar as figurasclc;                              % limpa o ambiente de simulaçãopkg load symbolic                 % somente para o OctaveN = 200;                          % número de harmônicas para análise%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Definir o sinal g(t) - onda pulsadaA1  = 1;                           % Nível alto da onda pulsadaA2  = 0;                           % Nível baixo da onda pulsadatau = 0.5;                         % Largura o pulso em nível altoT0  = 1;                           % Periodo do sinal  w0  = 2*pi/T0;                     % frequência angularf0  = 1/T0;                        % frequência angularn   = [-N:1:N];                    % harmônicas de Fourierf   = n*f0;                        % frequência das harmônicasKp  = 100;                         % quantas vezes  a frequência da portadora                                   % é maior que afrequência da mensagemwc  = Kp*w0;                       % frequência da portadoraAc  = 1;                           % amplitude da portadora%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Calcular a integral de Fourier : tempo em frequência%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2.1 - Tratando a mensagem - m(t)  syms t nDn  = inv(T0)*int(A1*exp(-j*n*w0*t),t,0,tau) + inv(T0)*int(A2*exp(-j*n*w0*t),t,tau,T0);D0  = inv(T0)*int(A1,t,0,tau) + inv(T0)*int(A2,t,tau,T0);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2.2 - Tratando o sinal modulado - AM = m(t)cos(wc t) syms t nDn_mod  = inv(T0)*int(A1*cos(wc*t)*exp(-j*n*w0*t),t,0,tau) + inv(T0)*int(A2*cos(wc*t)*exp(-j*n*w0*t),t,tau,T0);D0_mod  = inv(T0)*int(A1*cos(wc*t),t,0,tau) + inv(T0)*int(A2*cos(wc*t),t,tau,T0);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Calcular os valores numéricos de Dn%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3.1 - Calcular os valores numéricos de Dn - mensagemn   = [-N:1:N];                     % redefine os valores de nDn  = eval(Dn);                     % valores numéricosD0  = eval(D0);                     % valor médioDn(N+1) = D0;                       % substitui o valor correto de D0%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Calcular os valores numéricos de Dn - sinal moduladoDn_mod      = eval(Dn_mod);         % valores numéricosD0_mod      = eval(D0_mod);         % valor médioDn_mod(N+1) = D0_mod;               % substitui o valor correto de D0%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 4 - Sintese do sinal g(t) --> a partir de Dn, somar as projeções %%  4.1 - Definir o tempoM    = 1000;                        % número de pontos de simulaçãoTs   = T0/M;                        % passo de simulaçãotempo= [0:Ts:T0];                   % vetor tempo%%  4.2 - Somatória dos sinais: mensagem e moduladosomatoria     = 0;                  % incializa a somatóriasomatoria_mod = 0;                  % incializa a somatória modulaçãosomatoria_des = 0;                  % incializa a somatória modulaçãofor k = 0:2*N                       % 2*N + 1 --> pontos    somatoria     = somatoria + Dn(k+1)*exp(j*n(k+1)*w0*tempo);  somatoria_mod = somatoria_mod + Dn_mod(k+1)*exp(j*n(k+1)*w0*tempo);  somatoria_des = somatoria_des + Dn(k+1)*exp(j*(wc + n(k+1)*w0)*tempo);  endgt       =  somatoria;                  % mensagemAM       =  somatoria_mod;              % sinal moduladogt_des   =  somatoria_des;              % sinal modulado%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 5 - Visualizar: Dn (análise) e g(t) (síntese) figure(1)                           % domínio da frequênciastem(f,abs(Dn));xlabel('Frequência em Hertz')ylabel('Amplitude em Volts')title('Espectro de Amplitudes')figure(2)                           % domínio do tempoplot(tempo,gt);xlabel('Tempo em segundos')ylabel('Amplitude em Volts')title('Mensagem - m(t)')figure(3)                           % domínio da frequênciastem(f,abs(Dn_mod));xlabel('Frequência em Hertz')ylabel('Amplitude em Volts')title('Espectro de Amplitudes')figure(4)                           % domínio do tempoplot(tempo,AM);xlabel('Tempo em segundos')ylabel('Amplitude em Volts')title('Sinal AM no tempo')figure(5)                           % domínio do tempoplot(tempo,gt_des);xlabel('Tempo em segundos')ylabel('Amplitude em Volts')title('Sinal AM no tempo')