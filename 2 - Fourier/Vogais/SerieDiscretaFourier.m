%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Boas práticasclear all;                        % apaga todas as variáveisclose all;                        % fechar as figurasclc;                              % limpa o ambiente de simulação%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Leio o sinal g(t) em um vetor g[k] [gk, fs] = audioread ('a.wav');  % lendo a vogal a.wavread                                  % gk = vetor de amostras do sinal                                  % fs = frequência de amostragem%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Preparo o sinal para processar em Fourier  N     = length(gk);               % número de pontos do vetor  WN    = exp(-j*2*pi/N);           % determina a resolução em frequência   fmax  = fs/2;                     % frequência máxima que respeita a amostragem  Ts    = 1/fs;                     % intervalo de amostragem  tempo = linspace(0,N*Ts,N);       % Eixo tempo a partir da amostragem%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Calcular a série discreta##for n = 0 : N-1                             % N pontos##  ##  aux_k = 0;                                % inicializa o aumulado em zero##  ##  for k = 0 : N-1                           % N pontos##    ##    aux_k = aux_k + gk(k+1)*WN^(n*k);       % determina o valor acumulado em k##    ##  end##  ##    clc;##    n##    X(n+1)  = aux_k/N;                      % atualiza o valor de Fourier##    ##end%%% Criando o vetor frequênciafrequencia  = linspace(0,fs,N);             % Um vetor em frequência de N pontos%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 4 - Formato matricialtic;Jotas =  WN*ones(N,N);                      % matriz exp(-j*2*pi/N)nn    =  [0:1:N-1];                         % os indices em frequênciakk    =  [0:1:N-1];                         % os indices no temponk    =  nn'*kk;                            % matriz de expoentesWNm   =  Jotas.^nk;                         % matriz de FourierXf    =  WNm*gk;                            % Fouriertoc;[vt,tp]=findpeaks(abs(Xf),frequencia,'MinPeakDistance',0.001);title('Sinal de voz para a vogal a');xlabel('Tempo em s');ylabel('Tensão em Volts'); grid minor%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 5 - Visualizar: Dn (análise) e g(t) (síntese) figure(1)                           % domínio da frequência - discretostem(frequencia,abs(Xf));xlabel('Frequência em Hertz')ylabel('Amplitude em Volts')title('Espectro de Amplitudes')figure(2)                           % domínio do tempo - discretostem(tempo,gk);xlabel('Tempo em segundos')ylabel('Amplitude em Volts')title('Sinal no tempo')