%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Analisando um sinal musical com Fourier.%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveispkg load signal;    % carrega o pacote de sinais%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Sinal: calibração e sinal real%%%% trabalhar com um sinal amostrado%% %%% sinal artificial de referência - calibrar o Fourier nas mesmas condições%%%% criar um senoide artificial: amplitude - Ap, frequência - fo e fase - theta%% %%   sinal = Ap * cos (2 * pi * fo * t + theta)%%% recuperar o sinal a partir de um arquivo - real [gk,fs] = audioread ('Gaita_Blues.wav');      % transformei um arquivo .wav em um vetor g(k)                                               % recuperei a taxa de amostragem - fs%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  3 - Pré - processamento%%%%%%  determinando os picos para seleção das partes do sinal Ts = 1/fs;                     % determina a resolução com o qual o sinal foi amostrado Np = length(gk);               % determina o número de pontos do vetor gk t  = linspace(0,Np*Ts,Np)';    % cria o vetor tempo y  = gk(:,1);                  % cria o vetor y para manipulação visando não perder o sombrero data1       = abs(y); [pks idx]   = findpeaks(data1,"MinPeakHeight",0.7,"MinPeakDistance",round(0.1/Ts)); figure(1) plot(t,data1,t(idx),data1(idx),"or;>0.1;") axis tight legend("Faixa")  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  4 - Selecionando um trecho do sinal%%%%%%  parte final da frase trecho = gk(idx(end):end);% trecho = gk(idx(1):idx(2));Fgk    = fftshift(fft(trecho));freq   = linspace(-fs/2,fs/2,length(trecho));figure(2)plot(freq,abs(Fgk))%%% filtrando um uma parte significativafaixa = abs(freq)<10000;figure(3)plot(freq(faixa),abs(Fgk(faixa)))freqf = freq(faixa); data2       = abs(Fgk(faixa)); [pks2 idx2] = findpeaks(data2,"MinPeakHeight",250,"MinPeakDistance",round(fs/Np));figure(4) plot(freq(faixa),data2,freqf(idx2),data2(idx2),"or;>0.1;") axis tight legend("Faixa") %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  5 - sinteizando a gaita%%%%%%  parte final da fraseAo     = 580;       % amplitude de Fourier em módulofo     = 385;       % nota Fá - frequência fundamentaltheta1 = 0.46523;   % fase em radianosgaita = Ao * cos(2*pi*fo*t + theta1);