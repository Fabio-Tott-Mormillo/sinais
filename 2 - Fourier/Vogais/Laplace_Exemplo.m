%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  0 -  Laplace%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Preparação do código %% %% Boas práticas: limpeza de variáveis; variáveis globais%% Constantes; carregar bibliotecas;...%%%%% Limpezaclc;          % limpa visual da tela de comandosclose all;    % limpa as figurasclear all;    % limpa as variáveis%%% Bibliotecapkg load control%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Utilizando Laplace %% %%%%%  1/ (s + 1) = Y(s) / X(s) = G(s) --> ganho%%% vetoresNumerador    = 1;            % define o numerador de LaplaceDenominador  = [1 1];        % define o denominador%%% Criação Função de transferência - G(s) - ganhoGs           = tf(Numerador,Denominador)% Transfer function 'Gs' from input 'u1' to output ... %        1 % y1:  ----- %      s + 1% Continuous-time model.%%% Entrada do tipo impulso - delta(t) - X(s) = 1figure(1)impulse(Gs)%%% Entrada do tipo degrau - u(t) - X(s) = 1/sfigure(2)step(Gs)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Codificando %% %%%%%  for (...) endparametro = [0 1 2 3 4 5];figure(3);%%% Loopfor k =1:length(parametro)  Numerador    = 1;                       % define o numerador de Laplace  Denominador  = [1 parametro(k)];        % define o denominador%%% Criação Função de transferência - G(s) - ganho  clc;  Gs           = tf(Numerador,Denominador);  step(Gs);                               % análise da resposta temporalend