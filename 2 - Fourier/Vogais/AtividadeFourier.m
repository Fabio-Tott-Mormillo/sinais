%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Boas práticasclear all;clc;close all;pkg load symbolic;                                    % Somente para os que usam                                                       % Octave%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 1 - Sinal a ser estudado%% Definindo o sinal a ser estudado%% Ona pulsada de dois níveis, período To e largura tau A1 = 1;                  % Amplitude em nível alto A2 = 0;                  % Amplitude em nível baixo tau = 1.0;               % Largura do pulso de teste To1 = 100;               %   %%% Modificações - deslocamento  atraso1 = 0.5             % atraso de 0.5 segundos atraso2 = 1.5             % atraso de 1.5 segundo atraso3 = 2.5             % atraso de 2.5 segundo atraso4 = 3.5             % atraso de 3.5 segundo %%% Valores calculados para o primeio pulso fo1 = inv(To1);            % frequência em Hz --> fo  = 1Hz wo1 = 2*pi*fo1;            % frequência angular N1 = 1000;                   % Número de harmônicas da análise                            % -10Hz --> 10Hz - escolha n=[-N1:1:N1];              % índice de cada harmônica f1 = n*fo1;                % vetor de frequências da análise de Fourier%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  2 - Determinando o termo Dn simbolicamente - n simbólico syms n t%%%% Será o meu pulso de baseDn1 = inv(To1)*int(A1*exp(-j*n*wo1*t),t,-tau/2,tau/2);D_o1 = inv(To1)*int(A1,t,-tau/2,tau/2);%% Determinando o termo Dn numericamenten=[-N1:1:N1];n1 = n; Dn1 = eval(Dn1);D_o1 = eval(D_o1) ;      % Corrigindo o valor médio (NaN devido a indeterminação)Dn1(N1+1) = D_o1 ;       % Subistituindo no vetor de respostas%% Visualizando o espector de Amplitude figure(1) SF  = Dn1.*exp(-j*n1*wo1*atraso1);SF  = SF + 2*Dn1.*exp(-j*n1*wo1*atraso2);SF  = SF + 2*Dn1.*exp(-j*n1*wo1*atraso3);SF  = SF + Dn1.*exp(-j*n1*wo1*atraso4);plot(f1,abs(SF),'ko');title('Serie de Fourier do sinal g(t) -- To = 1s');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 3 - Sintese no tempo M = 1000; Ts1 = To1/M; tempo1 = [-To1/2:Ts1:To1/2];  % Tempo de simulação de um período do sinal g(t) n=[-N1:1:N1]; n1 =n;aux1  = 0; aux2  = 0; aux3  = 0; aux4  = 0;  aux   = 0;           for k = 0 : 2*N1          aux1 = aux1 + Dn1(k+1)*exp(j*n1(k+1)*wo1*tempo1).*exp(-j*n1(k+1)*wo1*atraso1);  aux2 = aux2 + Dn1(k+1)*exp(j*n1(k+1)*wo1*tempo1).*exp(-j*n1(k+1)*wo1*atraso2);  aux3 = aux3 + Dn1(k+1)*exp(j*n1(k+1)*wo1*tempo1).*exp(-j*n1(k+1)*wo1*atraso3);  aux4 = aux4 + Dn1(k+1)*exp(j*n1(k+1)*wo1*tempo1).*exp(-j*n1(k+1)*wo1*atraso4);  aux = aux + SF(k+1)*exp(j*n1(k+1)*wo1*tempo1);  endgr1 = aux1;gr2 = aux2;gr3 = aux3;gr4 = aux4;gr = aux;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 4 - Visualizaçãofigure(2)plot(tempo1,gr1+2*gr2+2*gr3+gr4, 'linewidth',3); title('Serie de Fourier do sinal g(t) To = 100s');xlabel('Tempo em segundos');ylabel('Amplitude em  volts');figure(3)plot(tempo1,gr, 'linewidth',3); title('Serie de Fourier do sinal g(t) To = 100s');xlabel('Tempo em segundos');ylabel('Amplitude em  volts');

