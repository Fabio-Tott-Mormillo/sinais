%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - Boas práticas%% %%%% clear all;clc;close all;pkg load symbolic;                                    % Somente para os que usam                                                       % Octave%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 0 - gerando os sinais g1(t), g2(t) e g3(t) e o sinal de referência%% g(t) - triangular centrada no zero%% %%%% %%% gerando o sinal de referência - g(t) To = 100;                  % período para todos os sinais gp = @(t) 2*t+1;           % parte ascendente de g(t) gn = @(t) -2*t+1;          % parte descendente de g(t) ti = -0.5;                 % instante de tempo inicial tf = +0.5;                 % instante de tempo final %%% Valores calculados para o primeio pulso fo = inv(To);            % frequência em Hz --> fo  = 0.01Hz wo = 2*pi*fo;            % frequência angular N = 1000;                % Número de harmônicas da análise                          % -10Hz --> 10Hz - escolha n=[-N:1:N];              % índice de cada harmônica f = n*fo;                % vetor de frequências da análise de Fourier%%% Vetor tempo para visualização do sinal%%% diferente da variável simbólica t%%% para efeito de organização da solução%%% existem outros caminhos M = 1000; Ts = To/M; tempo = [0:Ts:To];  % Tempo de simulação de um período do sinal g(t)  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 2 - Determinando o Fourier%%  %% Determinando o termo Dn simbolicamente%% n simbólico%%%%syms n tDn  = inv(To)*int(gp*exp(-j*n*wo*t),t,ti,0) + inv(To)*int(gn*exp(-j*n*wo*t),t,0,tf);D_o = inv(To)*int(gp,t,ti,0) + inv(To)*int(gn,t,0,tf);%% Determinando o termo Dn numericamenten=[-N:1:N]; Dn = eval(Dn);D_o = eval(D_o) ;     % Corrigindo o valor médio (NaN devido a indeterminação)Dn(N+1) = D_o ;       % Subistituindo no vetor de respostas%% Visualizando o espector de Amplitude figure(1) subplot(3,1,1); plot(f1,abs(Dn1),'ko'); hold;plot(f1,abs(0.5*Dn(A1,tau,f1)),'k-.')title('Serie de Fourier do sinal g(t) -- To = 1s');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts')subplot(3,1,2); plot(f2,abs(Dn2),'ko'); title('Serie de Fourier do sinal g(t)  -- To = 10s');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts')subplot(3,1,3); plot(f3,abs(Dn3),'ko'); title('Serie de Fourier do sinal g(t) -- To = 100s');xlabel('Frequencia em Hz');ylabel('Amplitude em  volts')%% Sintetizando o primeiro sinaln=[-N1:1:N1];n1 =n;aux  = 0;             for k = 0 : 2*N1          aux = aux + Dn1(k+1)*exp(j*n1(k+1)*wo1*tempo1);  endgr1 = aux;%% Sintetizando o segundo sinaln=[-N2:1:N2];n2 = n;aux  = 0;             for k = 0 : 2*N2          aux = aux + Dn2(k+1)*exp(j*n2(k+1)*wo2*tempo2);  endgr2 = aux;%% Sintetizando o terceiro sinaln=[-N3:1:N3];n3 =n;aux  = 0;             for k = 0 : 2*N3          aux = aux + Dn3(k+1)*exp(j*n3(k+1)*wo3*tempo3);  endgr3 = aux;figure(2)subplot(3,1,1); plot(tempo1,gr1); title('Serie de Fourier do sinal g(t) To = 1s');xlabel('Tempo em segundos');ylabel('Amplitude em  volts')subplot(3,1,2); plot(tempo2,gr2);title('Serie de Fourier do sinal g(t) To = 10s');xlabel('tempo em segundos');ylabel('Amplitude em  volts')subplot(3,1,3); plot(tempo3,gr3);title('Serie de Fourier do sinal g(t) To = 100s');xlabel('Tempos em segundos');ylabel('Amplitude em  volts')

